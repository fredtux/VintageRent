name: Java CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout main branch from GitHub
        uses: actions/checkout@v3

      - name: Step 2 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: maven
          
      - name: Step 3 - Get Maven project version
        id: get-version
        run: echo "project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Step 4 - Build Maven Project
        run: mvn -DskipTests=true package -B
        
      - name: Step 5 - Upload release asset
        uses: actions/upload-artifact@v2
        with:
          name: release-package
          path: target/VintageRent-${{ env.project_version }}.jar

      - name: Step 6 - Create release package
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.project_version }}
          release_name: This is version ${{ env.project_version }} of the project.
          body: This is version ${{ env.project_version }} of the project.
          draft: false
          prerelease: true
#           files: |
#             target/VintageRent-${{ steps.get-version.outputs.version }}.jar
#           opts.auth: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "target/VintageRent-${{ env.project_version }}.jar"
            
      - name: Step 7 - Attach release asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/VintageRent-${{ env.project_version }}.jar
          asset_name: VintageRent-${{ env.project_version }}.jar
          asset_content_type: application/java-archive
