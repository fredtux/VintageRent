name: Java CI

on:
#   push:
#     branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout main branch from GitHub
        uses: actions/checkout@v3

      - name: Step 2 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: maven
          
      - name: Step 3 - Get Maven project version
        id: get-version
        run: echo "{name}=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Step 4 - have GitHub Actions Build Maven Project
        run: mvn package -B
        
      - name: Step 5 - Upload release asset
        uses: actions/upload-artifact@v2
        with:
          name: release-package
          path: target/VintageRent-${{ env.GITHUB_OUTPUT }}.jar

      - name: Step 6 - Create release package
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_OUTPUT }}
        with:
          tag_name: v${{ env.GITHUB_OUTPUT }}
          release_name: This is version ${{ env.GITHUB_OUTPUT }} of the project.
          body: This is version ${{ env.GITHUB_OUTPUT }} of the project.
          draft: false
          prerelease: true
          files: |
            target/VintageRent-${{ steps.get-version.outputs.version }}.jar
          token: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Step 7 - Attach release asset
        uses: actions/upload-release-asset@v1
        env: 
          $GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/VintageRent-${{ env.GITHUB_OUTPUT }}.jar
          asset_name: VintageRent-${{ env.GITHUB_OUTPUT }}.jar
          asset_content_type: application/java-archive
          token: ${{ secrets.GITHUB_TOKEN }}
