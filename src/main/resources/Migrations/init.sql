-- DROP TABLE Rental;
-- DROP TABLE Administrator_Subdomains;
-- DROP TABLE Subdomains;
-- DROP TABLE Administrators;
-- DROP TABLE Employee;
-- DROP TABLE Salary;
-- DROP TABLE Address;
-- DROP TABLE Clients;
-- DROP TABLE Users;
-- DROP TABLE ClientType;
-- DROP TABLE Camera;
-- DROP TABLE Format;
-- DROP TABLE CameraType;
-- DROP TABLE Objective;
-- DROP TABLE Mount;
-- DROP SEQUENCE SQ_IDCAMERA;
-- -- DROP SEQUENCE SQ_IDRental;
-- DROP SEQUENCE SQ_UserID;
-- DROP SEQUENCE SQ_ObjectiveID;


CREATE SEQUENCE SQ_ObjectiveID START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
CREATE SEQUENCE SQ_IDCamera START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
CREATE SEQUENCE SQ_UserID START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 NOCYCLE CACHE 10;
-- CREATE SEQUENCE SQ_IDRental START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 NOCYCLE CACHE 50;


CREATE TABLE Format
(
    FormatID   INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Name   VARCHAR(255) NOT NULL,
    FilmWidth INT          NOT NULL,

    CONSTRAINT CK_LatimeValida_FilmWidth CHECK ( FilmWidth > 0 )
);

INSERT INTO Format(Name, FilmWidth)
VALUES ('Ingust', 35);
INSERT INTO Format(Name, FilmWidth)
VALUES ('Mediu', 120);
INSERT INTO Format(Name, FilmWidth)
VALUES ('Mare', 150);
INSERT INTO Format(Name, FilmWidth)
VALUES ('Dagherotip-half', 176);
INSERT INTO Format(Name, FilmWidth)
VALUES ('Dagherotip-quarter', 135);

COMMIT;

CREATE TABLE CameraType
(
    TypeID    INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL
);

INSERT INTO CameraType(Name)
VALUES ('TLR');
INSERT INTO CameraType(Name)
VALUES ('SLR');
INSERT INTO CameraType(Name)
VALUES ('Rangefinder');
INSERT INTO CameraType(Name)
VALUES ('Half-frame');
INSERT INTO CameraType(Name)
VALUES ('Pinhole');

COMMIT;

CREATE TABLE Mount
(
    MountID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Name  VARCHAR(255) NOT NULL
);

INSERT INTO Mount(Name)
VALUES ('M39');
INSERT INTO Mount(Name)
VALUES ('M42');
INSERT INTO Mount(Name)
VALUES ('Canon FD');
INSERT INTO Mount(Name)
VALUES ('Nikon F');
INSERT INTO Mount(Name)
VALUES ('Leica R');

COMMIT;

CREATE TABLE Objective
(
    ObjectiveID      INT PRIMARY KEY,
    Name        VARCHAR(255) NOT NULL,
    FocalDistance  NUMBER(3, 0) NOT NULL,
    MinimumAperture NUMBER(3, 1) NOT NULL,
    MaximumAperture NUMBER(3, 1) NOT NULL,
    Diameter        NUMBER(2, 0) NOT NULL,
    Price            NUMBER(6, 0) NOT NULL,
    RentalPrice  NUMBER(6, 0) NOT NULL,
    MountID       INT,

    CONSTRAINT FK_Objective_Mount FOREIGN KEY (MountID) REFERENCES Mount (MountID),
    CONSTRAINT CK_PriceValid_Price CHECK (Price > 0),
    CONSTRAINT CK_PriceValid_RentalPrice CHECK (RentalPrice > 0),
    CONSTRAINT CK_DiameterValid_Diameter CHECK (Diameter > 0),
    CONSTRAINT CK_DiafragmaValida_MaximumAperture CHECK (MaximumAperture > 0),
    CONSTRAINT CK_DiafragmaValida_MinimumAperture CHECK (MinimumAperture > 0),
    CONSTRAINT CK_DistantaValida_FocalDistance CHECK (FocalDistance > 0)
);

INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Helios 55-2', 58, 16, 1.8, 45, 200, 20, 2);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Jupyter', 50, 16, 2, 45, 190, 20, 1);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Super-Takumar', 50, 16, 1.4, 45, 220, 30, 1);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'W-Nikkor C', 35, 16, 1.8, 45, 300, 30, 4);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Helios 40-2', 85, 16, 1.5, 45, 180, 40, 2);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Leitz Summar', 50, 16, 2, 45, 5000, 70, 5);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Jena Biotar', 58, 16, 2, 40, 5500, 50, 5);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, '100mm Canon', 100, 16, 3.5, 42, 700, 30, 3);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, '50mm Canon', 50, 16, 1.4, 42, 600, 20, 3);
INSERT INTO Objective(ObjectiveID, Name, FocalDistance, MinimumAperture, MaximumAperture, Diameter, Price,
                      RentalPrice, MountID)
VALUES (SQ_ObjectiveID.nextval, 'Leitz Summicron-M', 58, 16, 1.8, 45, 7000, 100, 5);

COMMIT;

CREATE TABLE Camera
(
    IDCamera       INT PRIMARY KEY,
    Brand          VARCHAR(255) NOT NULL,
    ModelCamera    VARCHAR(255) NOT NULL,
    FormatID       INT,
    TypeID          INT,
    MountID      INT,
    ManufacturingYear   INT          NOT NULL,
    Price           NUMBER(8, 2) NOT NULL,
    RentalPrice NUMBER(6, 2) NOT NULL,

    CONSTRAINT FK_Camera_Format FOREIGN KEY (FormatID) REFERENCES Format (FormatID),
    CONSTRAINT FK_Camera_CameraType FOREIGN KEY (TypeID) REFERENCES CameraType (TypeID),
    CONSTRAINT FK_Camera_Mount FOREIGN KEY (MountID) REFERENCES Mount (MountID),
    CONSTRAINT CK_PriceValid_PriceCamera CHECK (Price > 0),
    CONSTRAINT CK_PriceValid_RentalPriceCamera CHECK (Price > 0)
);

INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Canon', 'A-1', 1, 2, 3, 1985, 1000, 20);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Canon', 'AE-1', 1, 2, 3, 1980, 1200, 30);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Canon', 'AL-1', 1, 2, 3, 1982, 1100, 30);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Nikon', 'EM', 1, 2, 4, 1979, 800, 25);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Nikon', 'FE', 1, 2, 4, 1978, 800, 25);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Zorki', '4', 1, 3, 1, 1967, 800, 50);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Leica', 'Leicaflex SL', 1, 2, 5, 1968, 3000, 50);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Leica', 'M2', 1, 3, 5, 1960, 5000, 50);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Leica', 'II', 1, 3, 5, 1940, 3000, 40);
INSERT INTO Camera(IDCamera, Brand, ModelCamera, FormatID, TypeID, MountID, ManufacturingYear, Price, RentalPrice)
VALUES (SQ_IDCamera.nextval, 'Leica', 'M4', 1, 3, 5, 1970, 4000, 40);

COMMIT;

CREATE TABLE ClientType
(
    TypeID    INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Discount NUMBER(4, 2)
);

INSERT INTO ClientType(Name, Discount)
VALUES ('Normal', 0);
INSERT INTO ClientType(Name, Discount)
VALUES ('Bronze', 1);
INSERT INTO ClientType(Name, Discount)
VALUES ('Silver', 2.5);
INSERT INTO ClientType(Name, Discount)
VALUES ('Gold', 5.25);
INSERT INTO ClientType(Name, Discount)
VALUES ('VIP', 20);

COMMIT;


CREATE TABLE Users
(
    UserID   INT PRIMARY KEY,
    UserName VARCHAR(255) NOT NULL,
    Password         CHAR(32),
    Surname           VARCHAR(255) NOT NULL,
    Firstname        VARCHAR(255) NOT NULL,
    CNP            CHAR(13),
    EMAIL          VARCHAR(255) NOT NULL,

    CONSTRAINT UQ_UserName UNIQUE (UserName),
    CONSTRAINT CK_ProperlyFormedHash_Password CHECK (LENGTH(Password) = 32),
    CONSTRAINT CK_CNPExists_CNP CHECK (LENGTH(CNP) = 13)
);
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'tuxmaster', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Dinu', 'Florin', NULL,
        'tuxmaster@magazinbd.ro');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'richard.avedon', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Richard', 'Avedon',
        '1590506100523', 'richardavedon@magazinbd.ro');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'dorothea.lange', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Lange', 'Dorothea',
        '2400506100523', 'dorothea.lange@magazinbd.ro');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'henri.cartier.bresson', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Cartier-Bresson',
        'Henri', '1080506100523', 'henri.cartier.bresson@magazinbd.ro');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'ion.ionescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Ionescu', 'Ion', '1990506100523',
        'ion.ionescu@gmail.com');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'vlad.voiculescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Voiculescu', 'Vlad',
        '5050506100523', 'voiculescu.vlad@gmail.com');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'gheorghe.gheorghe', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Gheorghe', 'Gheorghe',
        '5110506100523', 'gheorghe.gheorghe@gmail.com');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'alina.alinescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Alinescu', 'Alina',
        '6010506100523', 'alina.alinescu@gmail.com');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'viorica.ionescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Ionescu', 'Viorica',
        '2990506100523', 'viorica.ionescu@gmail.com');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'sandu.sandescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Sandescu', 'Sandu',
        '1800506100523', 'sandu.sandescu@magazinbd.ro');
INSERT INTO Users(UserID, UserName, Password, Surname, Firstname, CNP, EMAIL)
VALUES (SQ_UserID.nextval, 'corina.corinescu', '3c4ac1a78d4a9974c20d7ac6773f94d9', 'Corinescu', 'Corina',
        '2800506100523', 'corina.corinescu@magazinbd.ro');

COMMIT;


CREATE TABLE Administrators
(
    UserID INT PRIMARY KEY,
    IsActive    CHAR(1) DEFAULT '1' NOT NULL,

    CONSTRAINT FK_Administrators_Users FOREIGN KEY (UserID) REFERENCES Users (UserID),
    CONSTRAINT CK_BOOLHACK_IsActive CHECK (IsActive IN ('1', '0'))
);

INSERT INTO Administrators(UserID, IsActive)
VALUES (1, '1');
INSERT INTO Administrators(UserID, IsActive)
VALUES (2, '1');
INSERT INTO Administrators(UserID, IsActive)
VALUES (3, '0');
INSERT INTO Administrators(UserID, IsActive)
VALUES (4, '0');
INSERT INTO Administrators(UserID, IsActive)
VALUES (10, '0');

COMMIT;


CREATE TABLE Subdomains
(
    SubdomainID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Name     VARCHAR(255),

    CONSTRAINT CK_NameValida_Name CHECK (LENGTH(Name) > 0)
);

INSERT INTO Subdomains(Name)
VALUES ('www');
INSERT INTO Subdomains(Name)
VALUES ('store');
INSERT INTO Subdomains(Name)
VALUES ('blog');
INSERT INTO Subdomains(Name)
VALUES ('elearning');
INSERT INTO Subdomains(Name)
VALUES ('events');

COMMIT;


CREATE TABLE Administrator_Subdomains
(
    IDAdministrator INT,
    SubdomainID    INT,

    CONSTRAINT PK_Administrator_Subdomains PRIMARY KEY (IDAdministrator, SubdomainID),
    CONSTRAINT FK_Administrator_Subdomains_Administrator FOREIGN KEY (IDAdministrator) REFERENCES Administrators (UserID),
    CONSTRAINT FK_Administrator_Subdomains_Subdomains FOREIGN KEY (SubdomainID) REFERENCES Subdomains (SubdomainID)
);

INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (1, 1);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (1, 2);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (1, 3);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (1, 4);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (1, 5);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (2, 1);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (2, 2);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (2, 3);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (3, 1);
INSERT INTO Administrator_Subdomains(IDAdministrator, SubdomainID)
VALUES (3, 5);

COMMIT;


CREATE TABLE Salary
(
    SalaryID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Salary      NUMBER(6, 0) NOT NULL,
    Bonus        NUMBER(4, 2) NOT NULL,

    CONSTRAINT CK_SalaryValid_Salary CHECK (Salary > 0),
    CONSTRAINT CK_BonusValid_Bonus CHECK (Bonus >= 0)
);

INSERT INTO Salary(Salary, Bonus)
VALUES (10000, 10.2);
INSERT INTO Salary(Salary, Bonus)
VALUES (9000, 9.7);
INSERT INTO Salary(Salary, Bonus)
VALUES (6000, 7.5);
INSERT INTO Salary(Salary, Bonus)
VALUES (5500, 8.43);
INSERT INTO Salary(Salary, Bonus)
VALUES (5700, 8.47);

COMMIT;


CREATE TABLE Employee
(
    UserID INT PRIMARY KEY,
    BirthDate DATE NOT NULL,
    HireDate DATE NOT NULL,
    IDManager    INT,
    SalaryID   INT,

    CONSTRAINT FK_Employee_Users FOREIGN KEY (UserID) REFERENCES Users (UserID),
    CONSTRAINT FK_Employee_Employee FOREIGN KEY (IDManager) REFERENCES Employee (UserID),
    CONSTRAINT FK_Employee_Salarii FOREIGN KEY (SalaryID) REFERENCES Salary(SalaryID),
    CONSTRAINT CK_HireDateValida_HireDate_BirthDate CHECK(BirthDate < HireDate)
);

INSERT INTO Employee(UserID, BirthDate, IDManager, HireDate,SalaryID)
VALUES (2, date '1959-01-07', NULL, date '2015-01-08', 1);
INSERT INTO Employee(UserID, BirthDate, IDManager, HireDate,SalaryID)
VALUES (3, date '1990-02-08', 2, date '2016-01-08', 2);
INSERT INTO Employee(UserID, BirthDate, IDManager, HireDate,SalaryID)
VALUES (4, date '1999-01-07', 2, date '2017-01-08', 3);
INSERT INTO Employee(UserID, BirthDate, IDManager, HireDate,SalaryID)
VALUES (10, date '2002-07-11', 3, date '2018-01-08', 3);
INSERT INTO Employee(UserID, BirthDate, IDManager, HireDate,SalaryID)
VALUES (11, date '2001-10-02', 3, date '2020-01-08', 4);

COMMIT;


CREATE TABLE Clients
(
    UserID INT PRIMARY KEY,
    BirthDate DATE NOT NULL,
    TypeID        INT,

    CONSTRAINT FK_Clients_Users FOREIGN KEY (UserID) REFERENCES Users (UserID),
    CONSTRAINT FK_Clients_ClientType FOREIGN KEY (TypeID) REFERENCES ClientType (TypeID)
);

INSERT INTO Clients(UserID, BirthDate, TypeID)
VALUES (5, date '1990-01-08', 1);
INSERT INTO Clients(UserID, BirthDate, TypeID)
VALUES (6, date '1995-04-09', 2);
INSERT INTO Clients(UserID, BirthDate, TypeID)
VALUES (7, date '1999-06-10', 2);
INSERT INTO Clients(UserID, BirthDate, TypeID)
VALUES (8, date '2000-08-11', 3);
INSERT INTO Clients(UserID, BirthDate, TypeID)
VALUES (9, date '2001-09-12', 4);

COMMIT;


CREATE TABLE Address(
    AddressID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    Street VARCHAR(255),
    City VARCHAR(255),
    County VARCHAR(255),
    PostalCode VARCHAR(255),
    IDClient INT,

    CONSTRAINT FK_Address_Clients FOREIGN KEY (IDClient) REFERENCES Clients(UserID)
);

INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Plopului', 'Buzau', 'Buzau', '120200', 5);
INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Macesului', 'Bucuresti', 'Bucuresti', '120201', 6);
INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Rosiei', 'Buzau', 'Buzau', '120200', 7);
INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Prunului', 'Bucuresti', 'Bucuresti', '120202', 8);
INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Ardeiului', 'Bucuresti', 'Bucuresti', '120203', 9);
INSERT INTO Address (Street, City, County, PostalCode, IDClient)
VALUES ('Str. Trandafirului', 'Buzau', 'Buzau', '120204', 5);

COMMIT;


CREATE TABLE Rental
(
--     IDRental   INT PRIMARY KEY,
    RentDate DATE                NOT NULL,
    DurationInDays   NUMBER(2, 0)        NOT NULL,
    IDCamera       INT,
    IDClient       INT,
    IDAngajat      INT,
    ObjectiveID     INT,
    IsReturned   CHAR(1) DEFAULT '0' NOT NULL,
    PenaltyFee     NUMBER(6, 2),

    CONSTRAINT PK_Rental PRIMARY KEY (IDCamera, IDClient, IDAngajat, ObjectiveID, RentDate),
    CONSTRAINT FK_Rental_Camera FOREIGN KEY (IDCamera) REFERENCES Camera (IDCamera),
    CONSTRAINT FK_Rental_Clients FOREIGN KEY (IDClient) REFERENCES Clients (UserID),
    CONSTRAINT FK_Rental_Employee FOREIGN KEY (IDAngajat) REFERENCES Employee (UserID),
    CONSTRAINT FK_Rental_Obiectiv FOREIGN KEY (ObjectiveID) REFERENCES Objective (ObjectiveID),
    CONSTRAINT CK_BOOLHACK_IsReturned CHECK (IsReturned IN ('1', '0'))
);

INSERT INTO Rental(RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-01-01', 5, 1, 5, 2, '1', 0, 1);
INSERT INTO Rental(RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-01-05', 2, 1, 5, 2, '1', 10, 2);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-02-02', 3, 2, 6, 3, '1', 11, 4);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-03-02', 10, 3, 7, 4, '1', 20, 5);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-04-03', 11, 4, 8, 3, '1', 0, 6);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-04', 3, 5, 9, 4, '1', 0, 7);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-05', 5, 6, 5, 2, '1', 30, 8);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-10', 4, 7, 5, 2, '1', 0, 9);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-11', 4, 1, 6, 2, '1', 0, 10);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-12', 5, 3, 6, 10, '1', 0, 1);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-13', 6, 1, 7, 11, '1', 50, 2);
INSERT INTO Rental( RentDate, DurationInDays, IDCamera, IDClient, IDAngajat, IsReturned,
                       PenaltyFee, ObjectiveID)
VALUES (date '2022-05-14', 9, 2, 9, 4, '0', 0, 4);

COMMIT;

